/*
 * Copyright (C) 2017 Abdullah Shekhar
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package passwordmanager.gui;

import java.awt.Dimension;
import java.io.IOException;
import javax.swing.JEditorPane;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import sun.misc.Launcher;

/**
 *
 * @author Abdullah Shekhar
 */
public class Help extends javax.swing.JInternalFrame {

    /**
     * Creates new form Help
     */
    public Help() {
        initComponents();
        populateTree();    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spltpnHelp = new javax.swing.JSplitPane();

        getContentPane().add(spltpnHelp, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateTree() {
        DefaultMutableTreeNode parent = new DefaultMutableTreeNode("Help", true);
        DefaultMutableTreeNode welcome = new DefaultMutableTreeNode("Welcome");
        DefaultMutableTreeNode accountInfo = new DefaultMutableTreeNode("Account Info");
        parent.add(welcome);
        parent.add(accountInfo);
        tree = new JTree(parent);
        tree.addTreeSelectionListener(listener());
        spltpnHelp.setLeftComponent(tree);
    }

    TreeSelectionListener listener() {
        TreeSelectionListener objTreeListener = new TreeSelectionListener() {

            @Override
            public void valueChanged(TreeSelectionEvent e) {
                DefaultMutableTreeNode node = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();

                if (node == null) // Nothing is selected.
                {
                    return;
                }

                Object nodeInfo = node.getUserObject();
                if (node.isLeaf()) {
                    if (nodeInfo.toString().equals("Welcome")) {
                        JEditorPane editorPane = new JEditorPane();
                        editorPane.setEditable(false);
                        JScrollPane editorScrollPane = new JScrollPane(editorPane);
                        editorScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
                        editorScrollPane.setPreferredSize(new Dimension(350, 300));
                        editorScrollPane.setMinimumSize(new Dimension(10, 10));
                        java.net.URL helpURL = Launcher.class.getResource("/resources/help/user.htm");
                        if (helpURL != null) {
                            try {
                                editorPane.setPage(helpURL);
                            } catch (IOException ioe) {
                                System.err.println("Attempted to read a bad URL: " + helpURL);
                            }
                        } else {
                            System.err.println("Couldn't find file: user.htm");
                        }
                        spltpnHelp.setRightComponent(editorScrollPane);
                    } else if (nodeInfo.toString().equals("Account Info")) {
                        JEditorPane editorPane = new JEditorPane();
                        editorPane.setEditable(false);
                        JScrollPane editorScrollPane = new JScrollPane(editorPane);
                        editorScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
                        editorScrollPane.setPreferredSize(new Dimension(350, 300));
                        editorScrollPane.setMinimumSize(new Dimension(10, 10));
                        java.net.URL helpURL = Launcher.class.getResource("/resources/help/account.htm");
                        if (helpURL != null) {
                            try {
                                editorPane.setPage(helpURL);
                            } catch (IOException ioe) {
                                System.err.println("Attempted to read a bad URL: " + helpURL);
                            }
                        } else {
                            System.err.println("Couldn't find file: account.htm");
                        }
                        spltpnHelp.setRightComponent(editorScrollPane);
                    }
                    System.out.println("THE ROOT NODE IS: " + node.getParent().toString() + " CHILD NODE IS: " + nodeInfo.toString());
                } else {

                }
            }
        };
        return objTreeListener;
    }

    JTree tree;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane spltpnHelp;
    // End of variables declaration//GEN-END:variables
}
